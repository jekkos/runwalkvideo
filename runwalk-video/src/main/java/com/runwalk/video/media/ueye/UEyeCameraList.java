package com.runwalk.video.media.ueye;

import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class UEyeCameraList extends Structure {
	public NativeLong dwCount;
	/** C type : UEyeCameraList[1] */
	public UEyeCameraInfo[] uci = new UEyeCameraInfo[1];
	public UEyeCameraList() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("dwCount", "uci");
	}
	/** @param uci C type : UEyeCameraList[1] */
	public UEyeCameraList(NativeLong dwCount, UEyeCameraInfo uci[]) {
		super();
		this.dwCount = dwCount;
		if ((uci.length != this.uci.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.uci = uci;
	}
	public UEyeCameraList(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected UEyeCameraList newInstance() { return new UEyeCameraList(); }
	public static class ByReference extends UEyeCameraList implements Structure.ByReference {

	};
	public static class ByValue extends UEyeCameraList implements Structure.ByValue {

	};
}
