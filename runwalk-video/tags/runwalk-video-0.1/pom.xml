<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.runwalk</groupId>
	<artifactId>runwalk-video</artifactId>
	<packaging>jar</packaging>
	<version>0.1</version>
	<name>runwalk-video</name>
	<url>http://www.runwalk.be</url>
	<description>Beheer van klanten en loopanalyses</description>
	<inceptionYear>2008</inceptionYear>
	<scm>
	    <connection>scm:svn:http://runwalkvideo.googlecode.com/svn/tags/runwalk-video-0.1</connection>
	    <developerConnection>scm:svn:https://runwalkvideo.googlecode.com/svn/tags/runwalk-video-0.1</developerConnection>
		<url>http://runwalkvideo.googlecode.com/svn/tags/runwalk-video-0.1</url>
	</scm>
	<organization>
		<name>Runwalk Herentals</name>
		<url>http://www.runwalk.be</url>
	</organization>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>com/**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>com/**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.2</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!-- plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>keytool-maven-plugin</artifactId>
				<version>1.0-beta-2-SNAPSHOT</version>
				<executions>
					<execution>
						<id>generatekey</id>
						<goals>
							<goal>genkey</goal>
						</goals>
					</execution>
					<execution>
						<id>cleankeystore</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<keystore>${keystore.location}</keystore>
					<dname>cn=${keystore.dnameCn}, ou=${keystore.dnameOu},
						L=${keystore.dnameL}, ST=${keystore.dnameSt},
						o=${keystore.dnameO},
						c=${keystore.dnameC}</dname>
					<keypass>${keystore.password}</keypass>
					<storepass>${keystore.password}</storepass>
				</configuration>
			</plugin-->
			<plugin>
				<groupId>org.codehaus.mojo.webstart</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${libFolderPath}</outputDirectory>
					<workDirectory>${project.build.directory}</workDirectory>
					<excludeTransitive>false</excludeTransitive>
					<libPath>${libFolder}</libPath>
					<!-- JNLP generation -->
					<jnlp>
						<inputTemplate>src/main/jnlp/jnlptemplate.vm</inputTemplate> <!-- relative to inputTemplateResourcePath -->
						<outputFile>${jnlpOutputFilename}</outputFile> <!-- defaults to launch.jnlp -->
						<j2seVersion>1.6+</j2seVersion>
						<spec>6.0+</spec>
						<mainClass>${mainClass}</mainClass>
					</jnlp>
					<!-- SIGNING -->
					<sign>
						<keystore>${keystore.location}</keystore>
						<keypass>${keystore.password}</keypass>
						<storepass>${keystore.password}</storepass>
						<!--storetype>fillme</storetype-->
						<alias>jdc</alias>
						<validity>180</validity>

						<!-- only required for generating the keystore -->
						<!--
						<dnameCn>${keystore.dnameCn}</dnameCn>
						<dnameOu>${keystore.dnameOu}</dnameOu>
						<dnameO>${keystore.dnameO}</dnameO>
						<dnameL>${keystore.dnameL}</dnameL>
						<dnameSt>${keystore.dnameSt}</dnameSt>
						<dnameC>${keystore.dnameC}></dnameC>
						<keystoreConfig>
							<delete>false</delete>
							<gen>true</gen>
						</keystoreConfig>

						<verify>true</verify>
						-->
						<!-- KEYSTORE MANAGEMENT -->
					</sign>

					<!-- BUILDING PROCESS -->

					<pack200>false</pack200>
					<gzip>false</gzip>
					<outputJarVersions>true</outputJarVersions>
					<verbose>false</verbose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>assemble-app</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
						<configuration>
							<programs>
								<program>
									<mainClass>${mainClass}</mainClass>
									<name>${project.name}</name>
								</program>
							</programs>
							<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
							<binPrefix>${project.name}</binPrefix>
							<configurationDirectory>${libFolder}</configurationDirectory>
							<!-- set alternative assemble directory -->
							<assembleDirectory>${project.build.directory}</assembleDirectory>
							<generateRepository>false</generateRepository>
							<repositoryLayout>flat</repositoryLayout>
							<repositoryName>${libFolder}</repositoryName>
							<!-- Extra JVM arguments that will be included in the bin scripts -->
							<extraJvmArguments>-Djava.library.path="${libFolderPath}"</extraJvmArguments>
							<!-- Generate bin scripts for windows and unix pr default -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
               <artifactId>maven-deploy-plugin</artifactId>
               <version>2.4</version>
               <configuration>
                 <skip>true</skip>
              </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!-- TODO dsj artifact should only be extracted on windows.. otherwise use jmc -->
								<artifactItem>
									<groupId>de.humatic</groupId>
									<artifactId>dsj-nativelib</artifactId>
									<version>${dsj.version}</version>
									<classifier>natives-win-${os.arch}</classifier>
									<type>jar</type>
									<includes>**/*.dll</includes>
									<outputDirectory>${libFolderPath}</outputDirectory>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.sun.javafx.jmc</groupId>
									<artifactId>javafx-jmc-nativelib</artifactId>
									<version>1.2</version>
									<classifier>natives-win</classifier>
									<type>jar</type>
									<includes>**/*.dll</includes>
									<outputDirectory>${libFolderPath}</outputDirectory>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
							<!-- 
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<includes>**/*.dll</includes>
							<outputDirectory>${libFolderPath}</outputDirectory>
							-->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>deploy</phase>
						<configuration>
							<tasks>
								<ftp server="${ftp.url}" remotedir="${ftp.remotedir}" userid="${ftp.user}" password="${ftp.password}" binary="yes" depends="yes" verbose="yes">
									<fileset dir="${project.build.directory}">
										<include name="lib/**/*.jar" />
										<include name="${jnlpOutputFilename}" />
										<exclude name="lib/**/*.dll" />
									</fileset>
								</ftp>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>1.4.1</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.6.5</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.6.5</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<!-- extension for using ftp for deployments -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0-alpha-6</version>
			</extension>
		</extensions>
	</build>
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- Video libraries -->
		<dependency>
			<groupId>de.humatic</groupId>
			<artifactId>dsj</artifactId>
			<version>${dsj.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.javafx.jmc</groupId>
			<artifactId>javafx-jmc</artifactId>
    		<version>1.2</version>
		</dependency>
		<!-- Swing libraries -->
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>3.7.3.1</version>
		</dependency>
		<dependency>
			<groupId>it.tidalwave.betterbeansbinding</groupId>
			<artifactId>betterbeansbinding-core</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>it.tidalwave.betterbeansbinding</groupId>
			<artifactId>betterbeansbinding-swingbinding</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.jdesktop.bsaf</groupId>
			<artifactId>bsaf</artifactId>
			<version>1.9RC5</version>
		</dependency>
		<dependency>
			<groupId>com.tomtessier</groupId>
			<artifactId>scrollabledesktop</artifactId>
			<version>1.02</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.glazedlists</groupId>
			<artifactId>glazedlists_java15</artifactId>
			<version>1.8.0</version>
		</dependency>
		<!-- Persistence libraries -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<!--version>1.2</version-->
			<version>2.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>m2-repo</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>ibiblio-repo</id>
			<url>http://mirrors.ibiblio.org/pub/mirrors/maven2/</url>
		</repository>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/maven2/</url>
		</repository>
		<repository>
			<id>eclipseLink-repo</id>
			<url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo
			</url>
		</repository>
		<!-- you should host your own maven repository and host those dependencies that have are not redistributable by licensing -->
		<repository>
			<id>your-maven-repo</id>
			<url>${project.url}/maven2</url>
		</repository>
		<repository>
      		<id>maven2-repository.dev.java.net</id>
      		<name>Java.net Repository for Maven</name>
      		<url>http://download.java.net/maven/2/</url>
      		<layout>default</layout>
    	</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
      		<id>codehaus-snapshot</id>
      		<name>Codehaus Snapshot Repo</name>
      		<url>https://nexus.codehaus.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>Codehaus Snapshots2</id>
			<url>http://people.apache.org/repo/m2-snapshot-repository</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<distributionManagement>
		<snapshotRepository>
			<id>runwalk-ftp</id>
			<name>runwalk-repo</name>
			<url>ftp://${ftp.url}/maven2</url>
		</snapshotRepository>
	</distributionManagement>
	<profiles>
		<!-- This profile could be used for remote deployment -->
		<profile>
			<id>remote</id>
			<activation>
				<property>
					<name>remote</name>
				</property>
			</activation>
			<properties>
				<!-- Remote JDBC properties -->
				<jdbc.url>jdbc:mysql://localhost:3306/testdb</jdbc.url>
				<jdbc.user>remoteUser</jdbc.user>
				<jdbc.password>remotePwd</jdbc.password>			
				<codeBase>${project.url}/${ftp.remotedir}</codeBase>
			</properties>
		</profile>
		<!-- Profile to test the webstart app with the remote db -->
		<profile>
			<id>testRemote</id>
			<activation>
				<property>
					<name>testRemote</name>
				</property>
			</activation>
			<properties>
				<!-- Test JDBC properties -->
				<jdbc.url>jdbc:mysql://localhost:3306/testdb</jdbc.url>
				<jdbc.user>remoteUser</jdbc.user>
				<jdbc.password>remotePwd</jdbc.password>			
			</properties>
		</profile>
		<profile>
			<id>local</id>
			<activation>
      			<activeByDefault>true</activeByDefault>
   			</activation>
   			<properties>
   				<!-- Default JDBC properties -->
   				<jdbc.url>jdbc:mysql://localhost:3306/testdb</jdbc.url>
				  <jdbc.user>localUser</jdbc.user>
				  <jdbc.password>localPwd</jdbc.password>
   				<codeBase>file:///${project.build.directory}/</codeBase>
   			</properties> 
		</profile>
	</profiles>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<dsj.version>0.8.61</dsj.version>
		<!-- Keystore generation properties -->
		<keystore.dnameCn>www.runwalk.be</keystore.dnameCn>
		<keystore.dnameO>Runwalk Herentals</keystore.dnameO>
		<keystore.dnameL>Herentals</keystore.dnameL>
		<keystore.dnameSt>Antwerp</keystore.dnameSt>
		<keystore.dnameC>Belgium</keystore.dnameC>
		<keystore.dnameOu>None</keystore.dnameOu>
		<keystore.location>${basedir}/src/main/jnlp/myKeys</keystore.location>
		<keystore.password>yourPwd</keystore.password>
		<!-- JNLP file generation properties -->
		<mainClass>com.runwalk.video.RunwalkVideoApp</mainClass>
		<codeBase>file:///${project.build.directory}/</codeBase>
		<libFolder>lib</libFolder>
		<libFolderPath>${project.build.directory}/${libFolder}</libFolderPath>
		<codeBase>file:///${project.build.directory}/</codeBase>
		<jnlpOutputFilename>runwalk.jnlp</jnlpOutputFilename>
		<!-- JNLP deployment properties -->
		<ftp.url>your-ftp-server.com</ftp.url>
		<ftp.user>ftpUser</ftp.user>
		<ftp.password>ftpPwd</ftp.password>
		<ftp.remotedir>ftpDir</ftp.remotedir>
		<!-- Default JDBC properties -->
		<jdbc.driverClass>com.mysql.jdbc.Driver</jdbc.driverClass>
		<!-- JPA properties -->
		<jpa.persistenceProvider>org.eclipse.persistence.jpa.PersistenceProvider</jpa.persistenceProvider>
		<jpa.persistenceUnitName>runwalk-video</jpa.persistenceUnitName>
		<!-- dsj unlock codes -->
		<dsj.unlockName>yourUnlockName</dsj.unlockName>
		<dsj.code1>code1</dsj.code1>
		<dsj.code2>code2</dsj.code2>
		<dsj.code3>code3</dsj.code3>
	</properties>
</project>
